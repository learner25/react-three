import { WebGLRenderer, WebGLRendererParameters } from 'three/src/renderers/WebGLRenderer';
import { ShaderMaterial } from 'three/src/materials/ShaderMaterial';
import { WebGLShader } from 'three/src/renderers/webgl/WebGLShader';
import { WebGLCapabilities } from 'three/src/renderers/webgl/WebGLCapabilities';
import { WebGLExtensions } from 'three/src/renderers/webgl/WebGLExtensions';
import { WebGLTextures } from 'three/src/renderers/webgl/WebGLTextures';
import { WebGLUniforms } from 'three/src/renderers/webgl/WebGLUniforms';

export class WebGLProgram {
  constructor(
    renderer: WebGLRenderer,
    extensions: WebGLExtensions,
    code: string,
    material: ShaderMaterial,
    shader: WebGLShader,
    parameters: WebGLRendererParameters,
    capabilities: WebGLCapabilities,
    textures: WebGLTextures
  );

  id: number;
  code: string;
  usedTimes: number;
  program: any;
  vertexShader: WebGLShader;
  fragmentShader: WebGLShader;
  /**
   * @deprecated Use {@link WebGLProgram#getUniforms getUniforms()} instead.
   */
  uniforms: any;
  /**
   * @deprecated Use {@link WebGLProgram#getAttributes getAttributes()} instead.
   */
  attributes: any;

  getUniforms(): WebGLUniforms;
  getAttributes(): any;
  destroy(): void;
}

{"version":3,"sources":["index.js"],"names":["App","swal","scene","THREE","camera","window","innerWidth","innerHeight","renderer","setSize","this","mount","appendChild","domElement","addEventListener","e","console","log","geometry","material","color","wireframe","cube","add","position","z","controls","OrbitControls","animate","requestAnimationFrame","rotation","x","y","render","_this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","ref","Component","rootElement","document","getElementById","ReactDOM"],"mappings":"4OAOMA,8LAOFC,IAAK,uBAEL,IAAIC,EAAQ,IAAIC,IACZC,EAAS,IAAID,IACf,GACAE,OAAOC,WAAaD,OAAOE,YAC3B,GACA,KAGEC,EAAW,IAAIL,IACnBK,EAASC,QAAQJ,OAAOC,WAAYD,OAAOE,aAC3CG,KAAKC,MAAMC,YAAYJ,EAASK,YAChCL,EAASK,WAAWC,iBAAiB,QACrC,SAAcC,GAEZC,QAAQC,IAAIF,KAHoC,GAKlD,IAAIG,EAAW,IAAIf,IAAkB,EAAG,EAAG,GACvCgB,EAAW,IAAIhB,IAAwB,CAAEiB,MAAO,MAAUC,WAAU,IACpEC,EAAO,IAAInB,IAAWe,EAAUC,GACpCjB,EAAMqB,IAAID,GAEVlB,EAAOoB,SAASC,EAAI,EACpB,IAAIC,EAAW,IAAIC,IAAcvB,EAAQI,EAASK,YAClDX,EAAMqB,IAAIG,IACI,SAAVE,IACFC,sBAAsBD,GACtBN,EAAKQ,SAASC,GAAG,IACjBT,EAAKQ,SAASE,GAAG,IAEjBxB,EAASyB,OAAO/B,EAAOE,GAGzBwB,oCAKO,IAAAM,EAAAxB,KACP,OAAOyB,EAAAC,EAAAC,cAAA,OAAKC,IAAK,SAAAA,GAAG,OAAKJ,EAAKvB,MAAQ2B,YA/CxBC,aAsDZC,EAAcC,SAASC,eAAe,QAC5CC,IAASV,OAAOE,EAAAC,EAAAC,cAACrC,EAAD,MAASwC","file":"static/js/main.fd5a0760.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\n\nimport * as THREE from \"three\";\nimport swal from 'sweetalert';\n\nclass App extends Component {\n  \n  \n\n  componentDidMount() {\n     \n    \n    swal('drag cube to rotate')\n     \n    var scene = new THREE.Scene();\n    var camera = new THREE.PerspectiveCamera(\n      75,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n\n    var renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    this.mount.appendChild(renderer.domElement);\n    renderer.domElement.addEventListener('click',fuck,false);\n    function fuck(e)\n    {\n      console.log(e)\n    }\n    var geometry = new THREE.BoxGeometry(1, 1, 1);\n    var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 ,wireframe:true});\n    var cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    camera.position.z = 5;\n    var controls = new OrbitControls(camera, renderer.domElement);\n    scene.add(controls)\n    var animate = function() {\n      requestAnimationFrame(animate);\n      cube.rotation.x+=0.010\n      cube.rotation.y+=0.010\n      \n      renderer.render(scene, camera);\n    };\n\n    animate();\n  }\n \n \n\n  render() {\n    return <div ref={ref => (this.mount = ref)} >\n       \n    </div>;\n  }\n  \n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}